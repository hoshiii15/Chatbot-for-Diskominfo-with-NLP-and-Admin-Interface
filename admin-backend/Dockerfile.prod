# Production
FROM node:18-alpine AS builder

# Copy full repository into /app so shared/ and python-bot are available
WORKDIR /app
COPY . .

# Build only the admin-backend package
WORKDIR /app/admin-backend

# Copy package files for backend and install (including dev deps for build)
COPY admin-backend/package*.json ./
RUN npm install --no-audit --no-fund

# Copy backend source into builder workdir
COPY admin-backend/. ./

# Build the backend
RUN npm run build

# Debug: list built dist folder to ensure artifacts are created at expected path
RUN ls -la /app/admin-backend/dist || true

# Production stage
FROM node:18-alpine AS production

WORKDIR /app

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Create app user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# Copy built application (artifacts are under /app/admin-backend in the builder)
COPY --from=builder --chown=nodejs:nodejs /app/admin-backend/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/admin-backend/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/admin-backend/package*.json ./

# Also copy python-bot data and DB so runtime can access FAQ files and sqlite
COPY --from=builder --chown=nodejs:nodejs /app/python-bot ./python-bot
# When building from repository root the DB file will be at /app/admin-backend/database.sqlite
COPY --from=builder --chown=nodejs:nodejs /app/admin-backend/database.sqlite ./database.sqlite

# Create necessary directories
RUN mkdir -p logs backups data && chown -R nodejs:nodejs logs backups data

# Ensure runtime knows where to find the bundled FAQ files
ENV FAQ_DATA_PATH=/app/python-bot/data
ENV BOT_LOG_FILE=/app/python-bot/bot.log

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })" || exit 1

# Start the application
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/app.js"]
